spring:
  application:
    name: JhipsterSampleApplication
  threads:
    virtual:
      enabled: true
  data:
    mongodb:
      database: jhipsterSampleApplication
      uri: mongodb://localhost:27017/jhipsterSampleApplication
    jpa:
      repositories:
        bootstrap-mode: deferred
    redis:
      url: redis://localhost:6379
      database: 0
  datasource:
    hikari:
      poolName: Hikari
      auto-commit: false
    password: ''
    driver-class-name: org.postgresql.Driver
    username: jhipsterSampleApplication
    url: jdbc:postgresql://localhost:5432/jhipsterSampleApplication
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          batch_size: 25
        query:
          fail_on_pagination_over_collection_fetch: true
          in_clause_parameter_padding: true
        generate_statistics: false
        order_updates: true
        connection:
          provider_disables_autocommit: true
        order_inserts: true
    hibernate:
      ddl-auto: none
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    open-in-view: false
  task:
    scheduling:
      thread-name-prefix: jhipsterSampleApplication-scheduling-
      pool:
        size: 2
    execution:
      pool:
        keep-alive: 10s
        queue-capacity: 100
        max-size: 16
      thread-name-prefix: jhipsterSampleApplication-task-
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
logging:
  level:
    com:
      mycompany:
        myapp: INFO
application:
  logging:
    logstash:
      tcp:
        shutdown_grace_period: PT1M
        enabled: false
        ring-buffer-size: 8192
        host: localhost
        port: 5000
kafka:
  producer:
    '[key.serializer]': org.apache.kafka.common.serialization.StringSerializer
    '[value.serializer]': org.apache.kafka.common.serialization.StringSerializer
  bootstrap-servers: localhost:9092
  consumer:
    '[value.deserializer]': org.apache.kafka.common.serialization.StringDeserializer
    '[auto':
      offset.reset]: earliest
    '[key.deserializer]': org.apache.kafka.common.serialization.StringDeserializer
    '[group.id]': myapp
  polling:
    timeout: 10000
pulsar:
  client:
    service-url: pulsar://localhost:6650
